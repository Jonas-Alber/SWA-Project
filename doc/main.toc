\babel@toc {german}{}\relax 
\contentsline {section}{\numberline {1}Einführung und Kernkonzepte}{2}{section.1}%
\contentsline {subsection}{\numberline {1.1}Filter: Die Verarbeitungseinheiten}{2}{subsection.1.1}%
\contentsline {subsection}{\numberline {1.2}Pipes: Die Kommunikationskanäle}{3}{subsection.1.2}%
\contentsline {subsection}{\numberline {1.3}Stärke durch Komposition: Das Unix-Beispiel}{3}{subsection.1.3}%
\contentsline {section}{\numberline {2}Anwendungsbereiche und Beispiele}{3}{section.2}%
\contentsline {subsection}{\numberline {2.1}Beispiel: Verarbeitung von Telemetriedaten mit Kafka}{4}{subsection.2.1}%
\contentsline {section}{\numberline {3}Bewertung: Vor- und Nachteile}{5}{section.3}%
\contentsline {subsection}{\numberline {3.1}Vorteile}{5}{subsection.3.1}%
\contentsline {subsection}{\numberline {3.2}Nachteile}{6}{subsection.3.2}%
\contentsline {subsection}{\numberline {3.3}Fazit zur Bewertung}{6}{subsection.3.3}%
\contentsline {section}{\numberline {4}Praktische Umsetzung: Beispiel einer Datenverarbeitungs-Pipeline}{7}{section.4}%
\contentsline {subsection}{\numberline {4.1}Gesamtarchitektur}{7}{subsection.4.1}%
\contentsline {subsection}{\numberline {4.2}Implementierung der Pipeline-Steuerung: Die Wrapper-Klasse}{8}{subsection.4.2}%
\contentsline {subsection}{\numberline {4.3}Factory Pattern zur dynamischen Komponentenauswahl}{9}{subsection.4.3}%
\contentsline {subsubsection}{\numberline {4.3.1}Anwendung im Datenlader}{9}{subsubsection.4.3.1}%
\contentsline {subsubsection}{\numberline {4.3.2}Vorteile des Factory Patterns in der Pipeline}{10}{subsubsection.4.3.2}%
